// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sparcraft.proto

package sparcraft;

public final class Sparcraft {
  private Sparcraft() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface featuresOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sparcraft.features)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 id = 1;</code>
     */
    int getId();

    /**
     * <code>int32 hp = 2;</code>
     */
    int getHp();

    /**
     * <code>int32 posx = 3;</code>
     */
    int getPosx();

    /**
     * <code>int32 posy = 4;</code>
     */
    int getPosy();

    /**
     * <code>int32 energy = 5;</code>
     */
    int getEnergy();

    /**
     * <code>int32 shields = 6;</code>
     */
    int getShields();
  }
  /**
   * <pre>
   * [START messages]
   * </pre>
   *
   * Protobuf type {@code sparcraft.features}
   */
  public  static final class features extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sparcraft.features)
      featuresOrBuilder {
    // Use features.newBuilder() to construct.
    private features(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private features() {
      id_ = 0;
      hp_ = 0;
      posx_ = 0;
      posy_ = 0;
      energy_ = 0;
      shields_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private features(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              id_ = input.readInt32();
              break;
            }
            case 16: {

              hp_ = input.readInt32();
              break;
            }
            case 24: {

              posx_ = input.readInt32();
              break;
            }
            case 32: {

              posy_ = input.readInt32();
              break;
            }
            case 40: {

              energy_ = input.readInt32();
              break;
            }
            case 48: {

              shields_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return sparcraft.Sparcraft.internal_static_sparcraft_features_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return sparcraft.Sparcraft.internal_static_sparcraft_features_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              sparcraft.Sparcraft.features.class, sparcraft.Sparcraft.features.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>int32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    public static final int HP_FIELD_NUMBER = 2;
    private int hp_;
    /**
     * <code>int32 hp = 2;</code>
     */
    public int getHp() {
      return hp_;
    }

    public static final int POSX_FIELD_NUMBER = 3;
    private int posx_;
    /**
     * <code>int32 posx = 3;</code>
     */
    public int getPosx() {
      return posx_;
    }

    public static final int POSY_FIELD_NUMBER = 4;
    private int posy_;
    /**
     * <code>int32 posy = 4;</code>
     */
    public int getPosy() {
      return posy_;
    }

    public static final int ENERGY_FIELD_NUMBER = 5;
    private int energy_;
    /**
     * <code>int32 energy = 5;</code>
     */
    public int getEnergy() {
      return energy_;
    }

    public static final int SHIELDS_FIELD_NUMBER = 6;
    private int shields_;
    /**
     * <code>int32 shields = 6;</code>
     */
    public int getShields() {
      return shields_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeInt32(1, id_);
      }
      if (hp_ != 0) {
        output.writeInt32(2, hp_);
      }
      if (posx_ != 0) {
        output.writeInt32(3, posx_);
      }
      if (posy_ != 0) {
        output.writeInt32(4, posy_);
      }
      if (energy_ != 0) {
        output.writeInt32(5, energy_);
      }
      if (shields_ != 0) {
        output.writeInt32(6, shields_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (hp_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, hp_);
      }
      if (posx_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, posx_);
      }
      if (posy_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, posy_);
      }
      if (energy_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, energy_);
      }
      if (shields_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, shields_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof sparcraft.Sparcraft.features)) {
        return super.equals(obj);
      }
      sparcraft.Sparcraft.features other = (sparcraft.Sparcraft.features) obj;

      boolean result = true;
      result = result && (getId()
          == other.getId());
      result = result && (getHp()
          == other.getHp());
      result = result && (getPosx()
          == other.getPosx());
      result = result && (getPosy()
          == other.getPosy());
      result = result && (getEnergy()
          == other.getEnergy());
      result = result && (getShields()
          == other.getShields());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + HP_FIELD_NUMBER;
      hash = (53 * hash) + getHp();
      hash = (37 * hash) + POSX_FIELD_NUMBER;
      hash = (53 * hash) + getPosx();
      hash = (37 * hash) + POSY_FIELD_NUMBER;
      hash = (53 * hash) + getPosy();
      hash = (37 * hash) + ENERGY_FIELD_NUMBER;
      hash = (53 * hash) + getEnergy();
      hash = (37 * hash) + SHIELDS_FIELD_NUMBER;
      hash = (53 * hash) + getShields();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static sparcraft.Sparcraft.features parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static sparcraft.Sparcraft.features parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static sparcraft.Sparcraft.features parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static sparcraft.Sparcraft.features parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static sparcraft.Sparcraft.features parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static sparcraft.Sparcraft.features parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static sparcraft.Sparcraft.features parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static sparcraft.Sparcraft.features parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static sparcraft.Sparcraft.features parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static sparcraft.Sparcraft.features parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static sparcraft.Sparcraft.features parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static sparcraft.Sparcraft.features parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(sparcraft.Sparcraft.features prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * [START messages]
     * </pre>
     *
     * Protobuf type {@code sparcraft.features}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sparcraft.features)
        sparcraft.Sparcraft.featuresOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return sparcraft.Sparcraft.internal_static_sparcraft_features_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return sparcraft.Sparcraft.internal_static_sparcraft_features_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                sparcraft.Sparcraft.features.class, sparcraft.Sparcraft.features.Builder.class);
      }

      // Construct using sparcraft.Sparcraft.features.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0;

        hp_ = 0;

        posx_ = 0;

        posy_ = 0;

        energy_ = 0;

        shields_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return sparcraft.Sparcraft.internal_static_sparcraft_features_descriptor;
      }

      public sparcraft.Sparcraft.features getDefaultInstanceForType() {
        return sparcraft.Sparcraft.features.getDefaultInstance();
      }

      public sparcraft.Sparcraft.features build() {
        sparcraft.Sparcraft.features result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public sparcraft.Sparcraft.features buildPartial() {
        sparcraft.Sparcraft.features result = new sparcraft.Sparcraft.features(this);
        result.id_ = id_;
        result.hp_ = hp_;
        result.posx_ = posx_;
        result.posy_ = posy_;
        result.energy_ = energy_;
        result.shields_ = shields_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof sparcraft.Sparcraft.features) {
          return mergeFrom((sparcraft.Sparcraft.features)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(sparcraft.Sparcraft.features other) {
        if (other == sparcraft.Sparcraft.features.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (other.getHp() != 0) {
          setHp(other.getHp());
        }
        if (other.getPosx() != 0) {
          setPosx(other.getPosx());
        }
        if (other.getPosy() != 0) {
          setPosy(other.getPosy());
        }
        if (other.getEnergy() != 0) {
          setEnergy(other.getEnergy());
        }
        if (other.getShields() != 0) {
          setShields(other.getShields());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        sparcraft.Sparcraft.features parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (sparcraft.Sparcraft.features) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int id_ ;
      /**
       * <code>int32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>int32 id = 1;</code>
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private int hp_ ;
      /**
       * <code>int32 hp = 2;</code>
       */
      public int getHp() {
        return hp_;
      }
      /**
       * <code>int32 hp = 2;</code>
       */
      public Builder setHp(int value) {
        
        hp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 hp = 2;</code>
       */
      public Builder clearHp() {
        
        hp_ = 0;
        onChanged();
        return this;
      }

      private int posx_ ;
      /**
       * <code>int32 posx = 3;</code>
       */
      public int getPosx() {
        return posx_;
      }
      /**
       * <code>int32 posx = 3;</code>
       */
      public Builder setPosx(int value) {
        
        posx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 posx = 3;</code>
       */
      public Builder clearPosx() {
        
        posx_ = 0;
        onChanged();
        return this;
      }

      private int posy_ ;
      /**
       * <code>int32 posy = 4;</code>
       */
      public int getPosy() {
        return posy_;
      }
      /**
       * <code>int32 posy = 4;</code>
       */
      public Builder setPosy(int value) {
        
        posy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 posy = 4;</code>
       */
      public Builder clearPosy() {
        
        posy_ = 0;
        onChanged();
        return this;
      }

      private int energy_ ;
      /**
       * <code>int32 energy = 5;</code>
       */
      public int getEnergy() {
        return energy_;
      }
      /**
       * <code>int32 energy = 5;</code>
       */
      public Builder setEnergy(int value) {
        
        energy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 energy = 5;</code>
       */
      public Builder clearEnergy() {
        
        energy_ = 0;
        onChanged();
        return this;
      }

      private int shields_ ;
      /**
       * <code>int32 shields = 6;</code>
       */
      public int getShields() {
        return shields_;
      }
      /**
       * <code>int32 shields = 6;</code>
       */
      public Builder setShields(int value) {
        
        shields_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 shields = 6;</code>
       */
      public Builder clearShields() {
        
        shields_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:sparcraft.features)
    }

    // @@protoc_insertion_point(class_scope:sparcraft.features)
    private static final sparcraft.Sparcraft.features DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new sparcraft.Sparcraft.features();
    }

    public static sparcraft.Sparcraft.features getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<features>
        PARSER = new com.google.protobuf.AbstractParser<features>() {
      public features parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new features(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<features> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<features> getParserForType() {
      return PARSER;
    }

    public sparcraft.Sparcraft.features getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ArmyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sparcraft.Army)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .sparcraft.features unit = 50;</code>
     */
    java.util.List<sparcraft.Sparcraft.features> 
        getUnitList();
    /**
     * <code>repeated .sparcraft.features unit = 50;</code>
     */
    sparcraft.Sparcraft.features getUnit(int index);
    /**
     * <code>repeated .sparcraft.features unit = 50;</code>
     */
    int getUnitCount();
    /**
     * <code>repeated .sparcraft.features unit = 50;</code>
     */
    java.util.List<? extends sparcraft.Sparcraft.featuresOrBuilder> 
        getUnitOrBuilderList();
    /**
     * <code>repeated .sparcraft.features unit = 50;</code>
     */
    sparcraft.Sparcraft.featuresOrBuilder getUnitOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Our army file is 50 of these.
   * </pre>
   *
   * Protobuf type {@code sparcraft.Army}
   */
  public  static final class Army extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sparcraft.Army)
      ArmyOrBuilder {
    // Use Army.newBuilder() to construct.
    private Army(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Army() {
      unit_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Army(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 402: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                unit_ = new java.util.ArrayList<sparcraft.Sparcraft.features>();
                mutable_bitField0_ |= 0x00000001;
              }
              unit_.add(
                  input.readMessage(sparcraft.Sparcraft.features.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          unit_ = java.util.Collections.unmodifiableList(unit_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return sparcraft.Sparcraft.internal_static_sparcraft_Army_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return sparcraft.Sparcraft.internal_static_sparcraft_Army_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              sparcraft.Sparcraft.Army.class, sparcraft.Sparcraft.Army.Builder.class);
    }

    public static final int UNIT_FIELD_NUMBER = 50;
    private java.util.List<sparcraft.Sparcraft.features> unit_;
    /**
     * <code>repeated .sparcraft.features unit = 50;</code>
     */
    public java.util.List<sparcraft.Sparcraft.features> getUnitList() {
      return unit_;
    }
    /**
     * <code>repeated .sparcraft.features unit = 50;</code>
     */
    public java.util.List<? extends sparcraft.Sparcraft.featuresOrBuilder> 
        getUnitOrBuilderList() {
      return unit_;
    }
    /**
     * <code>repeated .sparcraft.features unit = 50;</code>
     */
    public int getUnitCount() {
      return unit_.size();
    }
    /**
     * <code>repeated .sparcraft.features unit = 50;</code>
     */
    public sparcraft.Sparcraft.features getUnit(int index) {
      return unit_.get(index);
    }
    /**
     * <code>repeated .sparcraft.features unit = 50;</code>
     */
    public sparcraft.Sparcraft.featuresOrBuilder getUnitOrBuilder(
        int index) {
      return unit_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < unit_.size(); i++) {
        output.writeMessage(50, unit_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < unit_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(50, unit_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof sparcraft.Sparcraft.Army)) {
        return super.equals(obj);
      }
      sparcraft.Sparcraft.Army other = (sparcraft.Sparcraft.Army) obj;

      boolean result = true;
      result = result && getUnitList()
          .equals(other.getUnitList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getUnitCount() > 0) {
        hash = (37 * hash) + UNIT_FIELD_NUMBER;
        hash = (53 * hash) + getUnitList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static sparcraft.Sparcraft.Army parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static sparcraft.Sparcraft.Army parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static sparcraft.Sparcraft.Army parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static sparcraft.Sparcraft.Army parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static sparcraft.Sparcraft.Army parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static sparcraft.Sparcraft.Army parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static sparcraft.Sparcraft.Army parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static sparcraft.Sparcraft.Army parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static sparcraft.Sparcraft.Army parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static sparcraft.Sparcraft.Army parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static sparcraft.Sparcraft.Army parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static sparcraft.Sparcraft.Army parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(sparcraft.Sparcraft.Army prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Our army file is 50 of these.
     * </pre>
     *
     * Protobuf type {@code sparcraft.Army}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sparcraft.Army)
        sparcraft.Sparcraft.ArmyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return sparcraft.Sparcraft.internal_static_sparcraft_Army_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return sparcraft.Sparcraft.internal_static_sparcraft_Army_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                sparcraft.Sparcraft.Army.class, sparcraft.Sparcraft.Army.Builder.class);
      }

      // Construct using sparcraft.Sparcraft.Army.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getUnitFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (unitBuilder_ == null) {
          unit_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          unitBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return sparcraft.Sparcraft.internal_static_sparcraft_Army_descriptor;
      }

      public sparcraft.Sparcraft.Army getDefaultInstanceForType() {
        return sparcraft.Sparcraft.Army.getDefaultInstance();
      }

      public sparcraft.Sparcraft.Army build() {
        sparcraft.Sparcraft.Army result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public sparcraft.Sparcraft.Army buildPartial() {
        sparcraft.Sparcraft.Army result = new sparcraft.Sparcraft.Army(this);
        int from_bitField0_ = bitField0_;
        if (unitBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            unit_ = java.util.Collections.unmodifiableList(unit_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.unit_ = unit_;
        } else {
          result.unit_ = unitBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof sparcraft.Sparcraft.Army) {
          return mergeFrom((sparcraft.Sparcraft.Army)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(sparcraft.Sparcraft.Army other) {
        if (other == sparcraft.Sparcraft.Army.getDefaultInstance()) return this;
        if (unitBuilder_ == null) {
          if (!other.unit_.isEmpty()) {
            if (unit_.isEmpty()) {
              unit_ = other.unit_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureUnitIsMutable();
              unit_.addAll(other.unit_);
            }
            onChanged();
          }
        } else {
          if (!other.unit_.isEmpty()) {
            if (unitBuilder_.isEmpty()) {
              unitBuilder_.dispose();
              unitBuilder_ = null;
              unit_ = other.unit_;
              bitField0_ = (bitField0_ & ~0x00000001);
              unitBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getUnitFieldBuilder() : null;
            } else {
              unitBuilder_.addAllMessages(other.unit_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        sparcraft.Sparcraft.Army parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (sparcraft.Sparcraft.Army) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<sparcraft.Sparcraft.features> unit_ =
        java.util.Collections.emptyList();
      private void ensureUnitIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          unit_ = new java.util.ArrayList<sparcraft.Sparcraft.features>(unit_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          sparcraft.Sparcraft.features, sparcraft.Sparcraft.features.Builder, sparcraft.Sparcraft.featuresOrBuilder> unitBuilder_;

      /**
       * <code>repeated .sparcraft.features unit = 50;</code>
       */
      public java.util.List<sparcraft.Sparcraft.features> getUnitList() {
        if (unitBuilder_ == null) {
          return java.util.Collections.unmodifiableList(unit_);
        } else {
          return unitBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .sparcraft.features unit = 50;</code>
       */
      public int getUnitCount() {
        if (unitBuilder_ == null) {
          return unit_.size();
        } else {
          return unitBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .sparcraft.features unit = 50;</code>
       */
      public sparcraft.Sparcraft.features getUnit(int index) {
        if (unitBuilder_ == null) {
          return unit_.get(index);
        } else {
          return unitBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .sparcraft.features unit = 50;</code>
       */
      public Builder setUnit(
          int index, sparcraft.Sparcraft.features value) {
        if (unitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUnitIsMutable();
          unit_.set(index, value);
          onChanged();
        } else {
          unitBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .sparcraft.features unit = 50;</code>
       */
      public Builder setUnit(
          int index, sparcraft.Sparcraft.features.Builder builderForValue) {
        if (unitBuilder_ == null) {
          ensureUnitIsMutable();
          unit_.set(index, builderForValue.build());
          onChanged();
        } else {
          unitBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .sparcraft.features unit = 50;</code>
       */
      public Builder addUnit(sparcraft.Sparcraft.features value) {
        if (unitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUnitIsMutable();
          unit_.add(value);
          onChanged();
        } else {
          unitBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .sparcraft.features unit = 50;</code>
       */
      public Builder addUnit(
          int index, sparcraft.Sparcraft.features value) {
        if (unitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUnitIsMutable();
          unit_.add(index, value);
          onChanged();
        } else {
          unitBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .sparcraft.features unit = 50;</code>
       */
      public Builder addUnit(
          sparcraft.Sparcraft.features.Builder builderForValue) {
        if (unitBuilder_ == null) {
          ensureUnitIsMutable();
          unit_.add(builderForValue.build());
          onChanged();
        } else {
          unitBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .sparcraft.features unit = 50;</code>
       */
      public Builder addUnit(
          int index, sparcraft.Sparcraft.features.Builder builderForValue) {
        if (unitBuilder_ == null) {
          ensureUnitIsMutable();
          unit_.add(index, builderForValue.build());
          onChanged();
        } else {
          unitBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .sparcraft.features unit = 50;</code>
       */
      public Builder addAllUnit(
          java.lang.Iterable<? extends sparcraft.Sparcraft.features> values) {
        if (unitBuilder_ == null) {
          ensureUnitIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, unit_);
          onChanged();
        } else {
          unitBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .sparcraft.features unit = 50;</code>
       */
      public Builder clearUnit() {
        if (unitBuilder_ == null) {
          unit_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          unitBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .sparcraft.features unit = 50;</code>
       */
      public Builder removeUnit(int index) {
        if (unitBuilder_ == null) {
          ensureUnitIsMutable();
          unit_.remove(index);
          onChanged();
        } else {
          unitBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .sparcraft.features unit = 50;</code>
       */
      public sparcraft.Sparcraft.features.Builder getUnitBuilder(
          int index) {
        return getUnitFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .sparcraft.features unit = 50;</code>
       */
      public sparcraft.Sparcraft.featuresOrBuilder getUnitOrBuilder(
          int index) {
        if (unitBuilder_ == null) {
          return unit_.get(index);  } else {
          return unitBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .sparcraft.features unit = 50;</code>
       */
      public java.util.List<? extends sparcraft.Sparcraft.featuresOrBuilder> 
           getUnitOrBuilderList() {
        if (unitBuilder_ != null) {
          return unitBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(unit_);
        }
      }
      /**
       * <code>repeated .sparcraft.features unit = 50;</code>
       */
      public sparcraft.Sparcraft.features.Builder addUnitBuilder() {
        return getUnitFieldBuilder().addBuilder(
            sparcraft.Sparcraft.features.getDefaultInstance());
      }
      /**
       * <code>repeated .sparcraft.features unit = 50;</code>
       */
      public sparcraft.Sparcraft.features.Builder addUnitBuilder(
          int index) {
        return getUnitFieldBuilder().addBuilder(
            index, sparcraft.Sparcraft.features.getDefaultInstance());
      }
      /**
       * <code>repeated .sparcraft.features unit = 50;</code>
       */
      public java.util.List<sparcraft.Sparcraft.features.Builder> 
           getUnitBuilderList() {
        return getUnitFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          sparcraft.Sparcraft.features, sparcraft.Sparcraft.features.Builder, sparcraft.Sparcraft.featuresOrBuilder> 
          getUnitFieldBuilder() {
        if (unitBuilder_ == null) {
          unitBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              sparcraft.Sparcraft.features, sparcraft.Sparcraft.features.Builder, sparcraft.Sparcraft.featuresOrBuilder>(
                  unit_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          unit_ = null;
        }
        return unitBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:sparcraft.Army)
    }

    // @@protoc_insertion_point(class_scope:sparcraft.Army)
    private static final sparcraft.Sparcraft.Army DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new sparcraft.Sparcraft.Army();
    }

    public static sparcraft.Sparcraft.Army getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Army>
        PARSER = new com.google.protobuf.AbstractParser<Army>() {
      public Army parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Army(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Army> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Army> getParserForType() {
      return PARSER;
    }

    public sparcraft.Sparcraft.Army getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sparcraft_features_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sparcraft_features_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sparcraft_Army_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sparcraft_Army_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017sparcraft.proto\022\tsparcraft\"_\n\010features" +
      "\022\n\n\002id\030\001 \001(\005\022\n\n\002hp\030\002 \001(\005\022\014\n\004posx\030\003 \001(\005\022\014" +
      "\n\004posy\030\004 \001(\005\022\016\n\006energy\030\005 \001(\005\022\017\n\007shields\030" +
      "\006 \001(\005\")\n\004Army\022!\n\004unit\0302 \003(\0132\023.sparcraft." +
      "featuresb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_sparcraft_features_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_sparcraft_features_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sparcraft_features_descriptor,
        new java.lang.String[] { "Id", "Hp", "Posx", "Posy", "Energy", "Shields", });
    internal_static_sparcraft_Army_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_sparcraft_Army_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sparcraft_Army_descriptor,
        new java.lang.String[] { "Unit", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
